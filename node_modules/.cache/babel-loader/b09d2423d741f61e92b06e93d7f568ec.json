{"ast":null,"code":"import _regeneratorRuntime from\"/Users/calvin/blockchain/wave-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/calvin/blockchain/wave-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/calvin/blockchain/wave-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Transaction}from'../transaction';import styles from'./index.module.scss';import{createWaveTxn,getWaves,getWaveCount,listenForNewWaves}from'../../service';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialWaves=[];export var MainBody=function MainBody(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),messageText=_useState2[0],setMessageText=_useState2[1];var _useState3=useState(initialWaves),_useState4=_slicedToArray(_useState3,2),waves=_useState4[0],setWaves=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),totalWaves=_useState6[0],setTotalWaves=_useState6[1];var handleTextChange=function handleTextChange(e){setMessageText(e.target.value);};var accountIsConnected=function accountIsConnected(){if(props.account===\"\"){return false;}return true;};var handleClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(accountIsConnected){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(!(messageText==='')){_context.next=4;break;}return _context.abrupt(\"return\");case 4:_context.next=6;return createWaveTxn(messageText);case 6:setMessageText('');case 7:case\"end\":return _context.stop();}}},_callee);}));return function handleClick(){return _ref.apply(this,arguments);};}();var handleGetAllWaves=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var retrieved;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(accountIsConnected){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:_context2.next=4;return getWaves();case 4:retrieved=_context2.sent;if(retrieved!==undefined){setWaves(retrieved);}case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function handleGetAllWaves(){return _ref2.apply(this,arguments);};}();var handleGetWaveCount=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var count;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(accountIsConnected){_context3.next=2;break;}return _context3.abrupt(\"return\");case 2:_context3.next=4;return getWaveCount();case 4:count=_context3.sent;if(count!==undefined){setTotalWaves(count);}case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function handleGetWaveCount(){return _ref3.apply(this,arguments);};}();var handleListenToNewWaves=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var retrieved;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(accountIsConnected){_context4.next=2;break;}return _context4.abrupt(\"return\");case 2:_context4.next=4;return listenForNewWaves(setWaves);case 4:retrieved=_context4.sent;case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function handleListenToNewWaves(){return _ref4.apply(this,arguments);};}();useEffect(function(){handleGetWaveCount();handleGetAllWaves();},[]);useEffect(function(){handleListenToNewWaves();},[]);var renderHeader=function renderHeader(){return/*#__PURE__*/_jsx(\"div\",{className:styles.headerContainer,children:/*#__PURE__*/_jsx(\"div\",{className:styles.header,children:\"Waveportal\"})});};var renderConnectWalletButton=function renderConnectWalletButton(){return/*#__PURE__*/_jsx(\"div\",{className:styles.buttonContainer,children:/*#__PURE__*/_jsx(\"div\",{className:styles.waveButton,onClick:props.connectWallet,children:/*#__PURE__*/_jsx(\"div\",{className:styles.buttonText,children:\"connect wallet\"})})});};var renderTextFieldAndWaveButton=function renderTextFieldAndWaveButton(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.textInputContainer,children:/*#__PURE__*/_jsx(\"input\",{className:styles.textInput,type:\"text\",value:messageText,placeholder:\"leave a message!\",onChange:handleTextChange})}),/*#__PURE__*/_jsx(\"div\",{className:styles.buttonContainer,children:/*#__PURE__*/_jsx(\"div\",{className:styles.waveButton,onClick:handleClick,children:/*#__PURE__*/_jsx(\"div\",{className:styles.buttonText,children:\"wave\"})})})]});};var renderBody=function renderBody(){return/*#__PURE__*/_jsxs(\"div\",{className:styles.bodyContainer,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.textContainer,children:\"Connect your wallet and leave a message!\"}),!props.account?renderConnectWalletButton():renderTextFieldAndWaveButton()]});};return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.dataContainer,children:[renderHeader(),/*#__PURE__*/_jsx(\"div\",{className:styles.countContainer,children:/*#__PURE__*/_jsxs(\"div\",{children:[\"So far \".concat(totalWaves,\" waves have been sent!\"),\" \"]})}),renderBody(),waves.length!==0?/*#__PURE__*/_jsx(\"div\",{className:styles.transactionsContainer,children:waves.map(function(wave){return/*#__PURE__*/_jsx(Transaction,{wave:wave},wave.timestamp);})}):null]})});};","map":{"version":3,"sources":["/Users/calvin/blockchain/wave-portal/src/components/mainbody/index.tsx"],"names":["React","useState","useEffect","Transaction","styles","createWaveTxn","getWaves","getWaveCount","listenForNewWaves","initialWaves","MainBody","props","messageText","setMessageText","waves","setWaves","totalWaves","setTotalWaves","handleTextChange","e","target","value","accountIsConnected","account","handleClick","handleGetAllWaves","retrieved","undefined","handleGetWaveCount","count","handleListenToNewWaves","renderHeader","headerContainer","header","renderConnectWalletButton","buttonContainer","waveButton","connectWallet","buttonText","renderTextFieldAndWaveButton","textInputContainer","textInput","renderBody","bodyContainer","textContainer","container","dataContainer","countContainer","length","transactionsContainer","map","wave","timestamp"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Wave } from '../../model/wave';\nimport { Transaction } from '../transaction';\nimport styles from './index.module.scss';\nimport { createWaveTxn, getWaves, getWaveCount, listenForNewWaves }  from '../../service';\n\nconst initialWaves: Wave[] = [];\n\ninterface Props {\n\taccount: any;\n\tconnectWallet: any;\n}\n\nexport const MainBody = (props: Props) => {\n\tconst [messageText, setMessageText] = useState<string>('');\n\tconst [waves, setWaves] = useState<Wave[]>(initialWaves);\n\tconst [totalWaves, setTotalWaves] = useState<number>(0);\n\n\tconst handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetMessageText(e.target.value);\n\t};\n\n\tconst accountIsConnected = (): Boolean => {\n\t\tif (props.account === \"\") {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tconst handleClick = async () => {\n\t\tif (!accountIsConnected) { return }\n\t\tif (messageText === '') { return }\n\t\tawait createWaveTxn(messageText);\n\t\tsetMessageText('');\n\t};\n\n\tconst handleGetAllWaves = async () => {\n\t\tif (!accountIsConnected) { return }\n\t\tconst retrieved = await getWaves();\n\t\tif (retrieved !== undefined) {\n\t\t\tsetWaves(retrieved);\n\t\t}\n\t};\n\n\tconst handleGetWaveCount = async () => {\n\t\tif (!accountIsConnected) { return }\n\t\tconst count = await getWaveCount();\n\t\tif (count !== undefined) {\n\t\t\tsetTotalWaves(count);\n\t\t}\n\t};\n\n\tconst handleListenToNewWaves = async () => {\n\t\tif (!accountIsConnected) { return }\n\t\tconst retrieved = await listenForNewWaves(setWaves);\n\t}\n\n\tuseEffect(() => {\n\t\thandleGetWaveCount();\n\t\thandleGetAllWaves();\n\t}, []);\n\n\tuseEffect(() => {\n\t\thandleListenToNewWaves();\n\t}, []);\n\n\tconst renderHeader = () => (\n\t\t<div className={styles.headerContainer}>\n\t\t\t<div className={styles.header}>Waveportal</div>\n\t\t</div>\n\t);\n\n\tconst renderConnectWalletButton = () => (\n\t\t<div className={styles.buttonContainer}>\n\t\t\t<div className={styles.waveButton} onClick={props.connectWallet}>\n\t\t\t\t<div className={styles.buttonText}>connect wallet</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\tconst renderTextFieldAndWaveButton = () => (\n\t\t<div>\n\t\t\t<div className={styles.textInputContainer}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={styles.textInput}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={messageText}\n\t\t\t\t\tplaceholder=\"leave a message!\"\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className={styles.buttonContainer}>\n\t\t\t\t<div className={styles.waveButton} onClick={handleClick}>\n\t\t\t\t\t<div className={styles.buttonText}>wave</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\tconst renderBody = () => (\n\t\t<div className={styles.bodyContainer}>\n\t\t\t<div className={styles.textContainer}>\n\t\t\t\tConnect your wallet and leave a message!\n\t\t\t</div>\n\t\t\t{!props.account ? renderConnectWalletButton() : renderTextFieldAndWaveButton()}\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.dataContainer}>\n\t\t\t\t{renderHeader()}\n\t\t\t\t<div className={styles.countContainer}>\n\t\t\t\t\t<div>{`So far ${totalWaves} waves have been sent!`} </div>\n\t\t\t\t</div>\n\t\t\t\t{renderBody()}\n\t\t\t\t{waves.length !== 0 \n\t\t\t\t\t\t? <div className={styles.transactionsContainer}>\n\t\t\t\t\t\t\t\t{waves.map((wave: Wave) => \n\t\t\t\t\t\t\t\t\t<Transaction key={wave.timestamp} wave={wave}/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}