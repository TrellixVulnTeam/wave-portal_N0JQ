{"ast":null,"code":"var _jsxFileName = \"/Users/calvin/blockchain/wave-portal/src/components/mainbody/index.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport { Transaction } from '../transaction';\nimport styles from './index.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialWaves = [];\nexport const MainBody = props => {\n  _s();\n\n  const [messageText, setMessageText] = useState('');\n  const [waves, setWaves] = useState(initialWaves);\n\n  const handleTextChange = e => {\n    setMessageText(e.target.value);\n  };\n\n  const handleClick = () => {\n    if (messageText === '') {\n      return;\n    }\n\n    ;\n    const newWave = {\n      id: nanoid(),\n      walletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n      messageText,\n      timestamp: moment().utc().format()\n    };\n    const newWaves = waves.concat(newWave).sort(function (a, b) {\n      return a.timestamp < b.timestamp ? 1 : -1;\n    });\n    setWaves(newWaves);\n    setMessageText('');\n  };\n\n  const renderHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.headerContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: \"Waveportal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n\n  const renderBody = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bodyContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textContainer,\n      children: \"Connect your wallet and leave a message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textInputContainer,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textInput,\n        type: \"text\",\n        value: messageText,\n        placeholder: \"leave a message!\",\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.waveButton,\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonText,\n          children: \"wave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dataContainer,\n      children: [renderHeader(), renderBody(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.transactionsContainer,\n        children: waves.map(w => /*#__PURE__*/_jsxDEV(Transaction, {\n          wave: w\n        }, w.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MainBody, \"cHErg5gRayCaHBrjqsgsMSF6keg=\");\n\n_c = MainBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"sources":["/Users/calvin/blockchain/wave-portal/src/components/mainbody/index.tsx"],"names":["moment","nanoid","React","useState","Transaction","styles","initialWaves","MainBody","props","messageText","setMessageText","waves","setWaves","handleTextChange","e","target","value","handleClick","newWave","id","walletId","timestamp","utc","format","newWaves","concat","sort","a","b","renderHeader","headerContainer","header","renderBody","bodyContainer","textContainer","textInputContainer","textInput","buttonContainer","waveButton","buttonText","container","dataContainer","transactionsContainer","map","w"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport { Wave } from '../../model/wave';\nimport { Transaction } from '../transaction';\nimport styles from './index.module.scss';\n\nconst initialWaves: Wave[] = [];\n\ninterface Props {\n\taccount: any;\n}\n\n\nexport const MainBody = (props: Props) => {\n\tconst [messageText, setMessageText] = useState<string>('');\n\tconst [waves, setWaves] = useState<Wave[]>(initialWaves);\n\n\tconst handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetMessageText(e.target.value);\n\t};\t\n\t\n\tconst handleClick = () => {\n\t\tif (messageText === '') { return };\n\n\t\tconst newWave: Wave = {\n\t\t\tid: nanoid(),\n\t\t\twalletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n\t\t\tmessageText, \n\t\t\ttimestamp: moment().utc().format(),\n\t\t}\n\n\t\tconst newWaves = waves\n\t\t\t.concat(newWave)\n\t\t\t.sort(function(a, b) {\n\t\t\t\treturn a.timestamp < b.timestamp ? 1: -1;\n\t\t\t});\n\n\t\tsetWaves(newWaves);\n\t\tsetMessageText('');\n\t};\n\n\tconst renderHeader = () => (\n\t\t<div className={styles.headerContainer}>\n\t\t\t<div className={styles.header}>Waveportal</div>\n\t\t</div>\n\t);\n\n\tconst renderBody = () => (\n\t\t<div className={styles.bodyContainer}>\n\t\t\t<div className={styles.textContainer}>\n\t\t\t\tConnect your wallet and leave a message!\n\t\t\t</div>\n\n\t\t\t<div className={styles.textInputContainer}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={styles.textInput}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={messageText}\n\t\t\t\t\tplaceholder=\"leave a message!\"\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className={styles.buttonContainer}>\n\t\t\t\t<div className={styles.waveButton} onClick={handleClick}>\n\t\t\t\t\t<div className={styles.buttonText}>wave</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.dataContainer}>\n\t\t\t\t{renderHeader()}\n\t\t\t\t{renderBody()}\n\t\t\t\t<div className={styles.transactionsContainer}>\n\t\t\t\t\t{waves.map((w: Wave) => \n\t\t\t\t\t<Transaction key={w.id} wave={w}/>\n\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}