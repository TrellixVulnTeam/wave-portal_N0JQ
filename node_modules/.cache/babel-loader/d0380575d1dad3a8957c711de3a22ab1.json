{"ast":null,"code":"var _jsxFileName = \"/Users/calvin/blockchain/wave-portal/src/components/mainbody/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Transaction } from '../transaction';\nimport styles from './index.module.scss';\nimport { createWaveTxn, getAllWaves, getWaveCount } from '../../service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialWaves = [];\nexport const MainBody = props => {\n  _s();\n\n  const [messageText, setMessageText] = useState('');\n  const [waves, setWaves] = useState(initialWaves);\n  const [totalWaves, setTotalWaves] = useState(0);\n\n  const handleTextChange = e => {\n    setMessageText(e.target.value);\n  };\n\n  const handleClick = async () => {\n    if (messageText === '') {\n      return;\n    }\n\n    ;\n    await createWaveTxn(messageText);\n  };\n\n  const handleGetAllWaves = async () => {\n    const waves = await getAllWaves(totalWaves);\n\n    if (waves !== undefined) {\n      setWaves(waves);\n    }\n  };\n\n  const handleGetWaveCount = async () => {\n    const count = await getWaveCount();\n    setTotalWaves(count);\n  };\n\n  useEffect(() => {\n    handleGetWaveCount();\n    handleGetAllWaves();\n  }, []);\n\n  const renderHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.headerContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: \"Waveportal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n\n  const renderConnectWalletButton = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.buttonContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.waveButton,\n      onClick: props.connectWallet,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonText,\n        children: \"connect wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n\n  const renderTextFieldAndWaveButton = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textInputContainer,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textInput,\n        type: \"text\",\n        value: messageText,\n        placeholder: \"leave a message!\",\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.waveButton,\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonText,\n          children: \"wave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n\n  const renderBody = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bodyContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textContainer,\n      children: \"Connect your wallet and leave a message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), !props.account ? renderConnectWalletButton() : renderTextFieldAndWaveButton()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dataContainer,\n      children: [renderHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.countContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [`So far ${totalWaves} waves have been sent!`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), renderBody(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.transactionsContainer,\n        children: waves.map(w => /*#__PURE__*/_jsxDEV(Transaction, {\n          wave: w\n        }, w.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MainBody, \"8LOR2mNBBBYEm5Hw0yurQ2b2Wcs=\");\n\n_c = MainBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"sources":["/Users/calvin/blockchain/wave-portal/src/components/mainbody/index.tsx"],"names":["React","useState","useEffect","Transaction","styles","createWaveTxn","getAllWaves","getWaveCount","initialWaves","MainBody","props","messageText","setMessageText","waves","setWaves","totalWaves","setTotalWaves","handleTextChange","e","target","value","handleClick","handleGetAllWaves","undefined","handleGetWaveCount","count","renderHeader","headerContainer","header","renderConnectWalletButton","buttonContainer","waveButton","connectWallet","buttonText","renderTextFieldAndWaveButton","textInputContainer","textInput","renderBody","bodyContainer","textContainer","account","container","dataContainer","countContainer","transactionsContainer","map","w","id"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport React, { useState, useEffect } from 'react';\nimport { Wave } from '../../model/wave';\nimport { Transaction } from '../transaction';\nimport styles from './index.module.scss';\nimport Web3 from 'web3';\n\nimport { BigNumber, ethers } from 'ethers';\nimport { CONTACT_ADDRESS } from '../../util/constants';\nimport contractABI from '../../util/WavePortal.json';\nimport { createWaveTxn, getAllWaves, getWaveCount } from '../../service';\n\nconst initialWaves: Wave[] = [];\n\ninterface Props {\n\taccount: any;\n\tconnectWallet: any;\n}\n\nexport const MainBody = (props: Props) => {\n\tconst [messageText, setMessageText] = useState<string>('');\n\tconst [waves, setWaves] = useState<Wave[]>(initialWaves);\n\tconst [totalWaves, setTotalWaves] = useState<number>(0);\n\n\tconst handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetMessageText(e.target.value);\n\t};\n\t\n\tconst handleClick = async () => {\n\t\tif (messageText === '') { return };\n\t\tawait createWaveTxn(messageText);\n\t};\n\n\tconst handleGetAllWaves = async () => {\n\t\tconst waves = await getAllWaves(totalWaves);\n\t\tif (waves !== undefined) {\n\t\t\tsetWaves(waves);\n\t\t}\n\t}\n\n\tconst handleGetWaveCount = async () => {\n\t\tconst count = await getWaveCount();\n\t\tsetTotalWaves(count);\n\t}\n\n\tuseEffect(() => {\n\t\thandleGetWaveCount();\n\t\thandleGetAllWaves();\n\t}, []);\n\n\tconst renderHeader = () => (\n\t\t<div className={styles.headerContainer}>\n\t\t\t<div className={styles.header}>Waveportal</div>\n\t\t</div>\n\t);\n\n\tconst renderConnectWalletButton = () => (\n\t\t<div className={styles.buttonContainer}>\n\t\t\t<div className={styles.waveButton} onClick={props.connectWallet}>\n\t\t\t\t<div className={styles.buttonText}>connect wallet</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\tconst renderTextFieldAndWaveButton = () => (\n\t\t<div>\n\t\t\t<div className={styles.textInputContainer}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={styles.textInput}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={messageText}\n\t\t\t\t\tplaceholder=\"leave a message!\"\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className={styles.buttonContainer}>\n\t\t\t\t<div className={styles.waveButton} onClick={handleClick}>\n\t\t\t\t\t<div className={styles.buttonText}>wave</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\tconst renderBody = () => (\n\t\t<div className={styles.bodyContainer}>\n\t\t\t<div className={styles.textContainer}>\n\t\t\t\tConnect your wallet and leave a message!\n\t\t\t</div>\n\t\t\t{!props.account ? renderConnectWalletButton() : renderTextFieldAndWaveButton()}\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.dataContainer}>\n\t\t\t\t{renderHeader()}\n\t\t\t\t<div className={styles.countContainer}>\n\t\t\t\t\t<div>{`So far ${totalWaves} waves have been sent!`} </div>\n\t\t\t\t</div>\n\t\t\t\t{renderBody()}\n\n\t\t\t\t<div className={styles.transactionsContainer}>\n\t\t\t\t\t{waves.map((w: Wave) => \n\t\t\t\t\t<Transaction key={w.id} wave={w}/>\n\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}