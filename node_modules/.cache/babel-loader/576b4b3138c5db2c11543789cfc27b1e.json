{"ast":null,"code":"import _regeneratorRuntime from\"/Users/calvin/blockchain/wave-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/calvin/blockchain/wave-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/calvin/blockchain/wave-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{MainBody}from'../mainbody';import styles from'./index.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),currentAccount=_useState2[0],setCurrentAccount=_useState2[1];var checkWalletConnection=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _window,ethereum,accounts,account;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_window=window,ethereum=_window.ethereum;if(ethereum){_context.next=5;break;}setCurrentAccount(\"\");return _context.abrupt(\"return\");case 5:;_context.next=8;return ethereum.request({method:'eth_accounts'});case 8:accounts=_context.sent;console.log('getaccounts');if(!(accounts.length===0)){_context.next=16;break;}setCurrentAccount(\"\");console.log(\"No authorized account found\");return _context.abrupt(\"return\");case 16:if(!(accounts.length>1)){_context.next=20;break;}setCurrentAccount(\"\");console.log('more than one account found');return _context.abrupt(\"return\");case 20:account=accounts[0];setCurrentAccount(account);console.log(\"authorized account: \",account);_context.next=29;break;case 25:_context.prev=25;_context.t0=_context[\"catch\"](0);setCurrentAccount(\"\");console.log(_context.t0);case 29:;case 30:case\"end\":return _context.stop();}}},_callee,null,[[0,25]]);}));return function checkWalletConnection(){return _ref.apply(this,arguments);};}();var connectWallet=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _window2,ethereum,accounts;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_window2=window,ethereum=_window2.ethereum;if(ethereum){_context2.next=6;break;}setCurrentAccount(\"\");alert(\"Get Metamask!\");return _context2.abrupt(\"return\");case 6:_context2.next=8;return ethereum.request({method:\"eth_requestAccounts\"});case 8:accounts=_context2.sent;setCurrentAccount(accounts[0]);console.log(\"connected: \",accounts[0]);_context2.next=17;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](0);setCurrentAccount(\"\");console.log(_context2.t0);case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[0,13]]);}));return function connectWallet(){return _ref2.apply(this,arguments);};}();useEffect(function(){checkWalletConnection();},[]);return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsx(MainBody,{account:currentAccount,connectWallet:connectWallet})});};export default App;","map":{"version":3,"sources":["/Users/calvin/blockchain/wave-portal/src/components/app/index.tsx"],"names":["React","useState","useEffect","MainBody","styles","App","currentAccount","setCurrentAccount","checkWalletConnection","window","ethereum","request","method","accounts","console","log","length","account","connectWallet","alert","container"],"mappings":"8cAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,2CAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eAC2BJ,QAAQ,CAAS,EAAT,CADnC,wCACVK,cADU,eACMC,iBADN,eAGjB,GAAMC,CAAAA,qBAAqB,0FAAG,iMAEFC,MAFE,CAEpBC,QAFoB,SAEpBA,QAFoB,IAIvBA,QAJuB,yBAK3BH,iBAAiB,CAAC,EAAD,CAAjB,CAL2B,wCAO3B,CAP2B,sBASLG,CAAAA,QAAQ,CAACC,OAAT,CAAiB,CAACC,MAAM,CAAE,cAAT,CAAjB,CATK,QAStBC,QATsB,eAU5BC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAV4B,KAWxBF,QAAQ,CAACG,MAAT,GAAoB,CAXI,2BAY3BT,iBAAiB,CAAC,EAAD,CAAjB,CACAO,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAb2B,8CAejBF,QAAQ,CAACG,MAAT,CAAkB,CAfD,2BAgB3BT,iBAAiB,CAAC,EAAD,CAAjB,CACAO,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAjB2B,yCAqBtBE,OArBsB,CAqBZJ,QAAQ,CAAC,CAAD,CArBI,CAsB5BN,iBAAiB,CAACU,OAAD,CAAjB,CACAH,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCE,OAApC,EAvB4B,iFA0B5BV,iBAAiB,CAAC,EAAD,CAAjB,CACAO,OAAO,CAACC,GAAR,cA3B4B,QA4B5B,CA5B4B,qEAAH,kBAArBP,CAAAA,qBAAqB,0CAA3B,CA+BA,GAAMU,CAAAA,aAAa,2FAAG,iMAEMT,MAFN,CAEZC,QAFY,UAEZA,QAFY,IAGfA,QAHe,0BAInBH,iBAAiB,CAAC,EAAD,CAAjB,CACAY,KAAK,CAAC,eAAD,CAAL,CALmB,gEASGT,CAAAA,QAAQ,CAACC,OAAT,CAAiB,CAAEC,MAAM,CAAE,qBAAV,CAAjB,CATH,QASdC,QATc,gBAWpBN,iBAAiB,CAACM,QAAQ,CAAC,CAAD,CAAT,CAAjB,CACAC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BF,QAAQ,CAAC,CAAD,CAAnC,EAZoB,qFAcpBN,iBAAiB,CAAC,EAAD,CAAjB,CACAO,OAAO,CAACC,GAAR,eAfoB,uEAAH,kBAAbG,CAAAA,aAAa,2CAAnB,CAmBAhB,SAAS,CAAC,UAAM,CACfM,qBAAqB,GACrB,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACC,YAAK,SAAS,CAAEJ,MAAM,CAACgB,SAAvB,uBACC,KAAC,QAAD,EAAU,OAAO,CAAEd,cAAnB,CAAmC,aAAa,CAAEY,aAAlD,EADD,EADD,CAKA,CA9DD,CAgEA,cAAeb,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MainBody } from '../mainbody';\nimport styles from './index.module.scss';\nimport { ethers } from 'ethers';\n\nconst App = () => {\n\tconst [currentAccount, setCurrentAccount] = useState<string>(\"\")\n\n\tconst checkWalletConnection = async () => {\n\t\ttry {\n\t\t\tconst { ethereum }: any = window;\n\t\t\t\n\t\t\tif (!ethereum) {\n\t\t\t\tsetCurrentAccount(\"\");\n\t\t\t\treturn;\n\t\t\t};\n\t\n\t\t\tconst accounts = await ethereum.request({method: 'eth_accounts' });\n\t\t\tconsole.log('getaccounts');\n\t\t\tif (accounts.length === 0) { \n\t\t\t\tsetCurrentAccount(\"\");\n\t\t\t\tconsole.log(\"No authorized account found\");\n\t\t\t\treturn;\n\t\t\t} else if (accounts.length > 1) {\n\t\t\t\tsetCurrentAccount(\"\");\n\t\t\t\tconsole.log('more than one account found');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst account = accounts[0];\n\t\t\tsetCurrentAccount(account);\n\t\t\tconsole.log(\"authorized account: \", account);\n\n\t\t} catch (error) {\n\t\t\tsetCurrentAccount(\"\");\n\t\t\tconsole.log(error);\n\t\t};\n\t};\n\n\tconst connectWallet = async () => {\n\t\ttry {\n\t\t\tconst { ethereum }: any = window;\n\t\t\tif (!ethereum) {\n\t\t\t\tsetCurrentAccount(\"\");\n\t\t\t\talert(\"Get Metamask!\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n\t\t\tsetCurrentAccount(accounts[0]);\n\t\t\tconsole.log(\"connected: \", accounts[0]);\n\t\t} catch (error) {\n\t\t\tsetCurrentAccount(\"\");\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tcheckWalletConnection();\n\t}, []);\n\n\treturn(\n\t\t<div className={styles.container}>\n\t\t\t<MainBody account={currentAccount} connectWallet={connectWallet}/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}