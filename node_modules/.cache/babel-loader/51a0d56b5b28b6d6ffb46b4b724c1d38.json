{"ast":null,"code":"var _jsxFileName = \"/Users/calvin/blockchain/wave-portal/src/components/mainbody/index.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport styles from './index.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainBody = () => {\n  _s();\n\n  const [messageText, setMessageText] = useState('');\n  const [waves, setWaves] = useState(null);\n\n  const handleTextChange = e => {\n    setMessageText(e.target.value);\n  };\n\n  const handleClick = () => {\n    setMessageText('');\n\n    if (messageText === '') {\n      return;\n    }\n\n    const newWave = {\n      id: nanoid(),\n      walletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n      messageText,\n      timestamp: moment().utc().format()\n    };\n\n    if (waves === null) {\n      setWaves([newWave]);\n      return;\n    }\n\n    const temp = waves;\n    temp.push(newWave);\n    temp.sort(function (a, b) {\n      return a > b ? 1 : -1;\n    });\n  };\n\n  const renderHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.headerContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: \"Waveportal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n\n  const renderBody = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bodyContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textContainer,\n      children: \"Connect your wallet and leave a message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textInputContainer,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textInput,\n        type: \"text\",\n        value: messageText,\n        placeholder: \"leave a message!\",\n        onChange: e => handleTextChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.waveButton,\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonText,\n          children: \"wave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dataContainer,\n      children: [renderHeader(), renderBody()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MainBody, \"fbOBcUCXI45o/T/0pWyshtVs0Cg=\");\n\n_c = MainBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"sources":["/Users/calvin/blockchain/wave-portal/src/components/mainbody/index.tsx"],"names":["moment","nanoid","React","useState","styles","MainBody","messageText","setMessageText","waves","setWaves","handleTextChange","e","target","value","handleClick","newWave","id","walletId","timestamp","utc","format","temp","push","sort","a","b","renderHeader","headerContainer","header","renderBody","bodyContainer","textContainer","textInputContainer","textInput","buttonContainer","waveButton","buttonText","container","dataContainer"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport { Wave } from '../../model/wave';\nimport styles from './index.module.scss';\n\nexport const MainBody = () => {\n\tconst [messageText, setMessageText] = useState<string>('');\n\tconst [waves, setWaves] = useState<Wave[]|null>(null);\n\n\tconst handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetMessageText(e.target.value);\n\t};\t\n\t\n\tconst handleClick = () => {\n\t\tsetMessageText('');\n\t\tif (messageText === '') {\n\t\t\treturn;\n\t\t}\n\t\tconst newWave: Wave = {\n\t\t\tid: nanoid(),\n\t\t\twalletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n\t\t\tmessageText, \n\t\t\ttimestamp: moment().utc().format(),\n\t\t}\n\n\t\tif (waves === null) {\n\t\t\tsetWaves([newWave]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst temp = waves\n\t\ttemp.push(newWave)\n\t\ttemp.sort(function(a, b) {\n\t\t\treturn a > b ? 1: -1;\n\t\t});\n\t};\n\n\tconst renderHeader = () => (\n\t\t<div className={styles.headerContainer}>\n\t\t\t<div className={styles.header}>Waveportal</div>\n\t\t</div>\n\t);\n\n\tconst renderBody = () => (\n\t\t<div className={styles.bodyContainer}>\n\t\t\t<div className={styles.textContainer}>\n\t\t\t\tConnect your wallet and leave a message!\n\t\t\t</div>\n\n\t\t\t<div className={styles.textInputContainer}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={styles.textInput}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={messageText}\n\t\t\t\t\tplaceholder=\"leave a message!\"\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\thandleTextChange(e)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className={styles.buttonContainer}>\n\t\t\t\t<div className={styles.waveButton} onClick={handleClick}>\n\t\t\t\t\t<div className={styles.buttonText}>wave</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.dataContainer}>\n\t\t\t\t{renderHeader()}\n\t\t\t\t{renderBody()}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}