{"ast":null,"code":"var _jsxFileName = \"/Users/calvin/blockchain/wave-portal/src/components/mainbody/index.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport { Transaction } from '../transaction';\nimport styles from './index.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wavesList = [{\n  id: nanoid(),\n  walletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n  messageText: \"hello! Making my mark on the Ethereum blockchain\",\n  timestamp: moment().utc().format().toString()\n}, {\n  id: nanoid(),\n  walletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n  messageText: \"Nice! This is awesome stuff\",\n  timestamp: moment().utc().format().toString()\n}, {\n  id: nanoid(),\n  walletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n  messageText: \"wave portal. A portal to the etherum blockchain. a social project\",\n  timestamp: moment().utc().format().toString()\n}];\nexport const MainBody = () => {\n  _s();\n\n  const initialList = [];\n  const [messageText, setMessageText] = useState('');\n  const [waves, setWaves] = useState(initialList);\n\n  const handleTextChange = e => {\n    setMessageText(e.target.value);\n  };\n\n  const handleClick = () => {\n    if (messageText === '') {\n      return;\n    }\n\n    ;\n    const newWave = {\n      id: nanoid(),\n      walletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n      messageText,\n      timestamp: moment().utc().format()\n    };\n    const temp = waves;\n    temp.push(newWave);\n    temp.sort(function (a, b) {\n      return a.timestamp < b.timestamp ? 1 : -1;\n    });\n    setWaves({ ...temp\n    });\n    setMessageText('');\n  };\n\n  const renderHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.headerContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: \"Waveportal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n\n  const renderBody = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bodyContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textContainer,\n      children: \"Connect your wallet and leave a message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textInputContainer,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textInput,\n        type: \"text\",\n        value: messageText,\n        placeholder: \"leave a message!\",\n        onChange: e => handleTextChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.waveButton,\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonText,\n          children: \"wave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n\n  const renderTransactions = () => {\n    console.log(waves);\n    return waves.map(w => {\n      /*#__PURE__*/\n      _jsxDEV(Transaction, {\n        wave: w\n      }, w.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dataContainer,\n      children: [renderHeader(), renderBody(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.transactionsContainer,\n        children: renderTransactions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MainBody, \"+RuNDlN97M0XV/p3Yrg+oM0oM74=\");\n\n_c = MainBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"sources":["/Users/calvin/blockchain/wave-portal/src/components/mainbody/index.tsx"],"names":["moment","nanoid","React","useState","Transaction","styles","wavesList","id","walletId","messageText","timestamp","utc","format","toString","MainBody","initialList","setMessageText","waves","setWaves","handleTextChange","e","target","value","handleClick","newWave","temp","push","sort","a","b","renderHeader","headerContainer","header","renderBody","bodyContainer","textContainer","textInputContainer","textInput","buttonContainer","waveButton","buttonText","renderTransactions","console","log","map","w","container","dataContainer","transactionsContainer"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport { Wave } from '../../model/wave';\nimport { Transaction } from '../transaction';\nimport styles from './index.module.scss';\n\nconst wavesList: Wave[] = [\n\t{\n\t\tid: nanoid(),\n\t\twalletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n\t\tmessageText: \"hello! Making my mark on the Ethereum blockchain\",\n\t\ttimestamp: moment().utc().format().toString()\n\t},\n\t{\n\t\tid: nanoid(),\n\t\twalletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n\t\tmessageText: \"Nice! This is awesome stuff\",\n\t\ttimestamp: moment().utc().format().toString()\n\t},\n\t{\n\t\tid: nanoid(),\n\t\twalletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n\t\tmessageText: \"wave portal. A portal to the etherum blockchain. a social project\",\n\t\ttimestamp: moment().utc().format().toString()\n\t}\n]\n\n\n\nexport const MainBody = () => {\n\tconst initialList: Wave[] = [];\n\n\tconst [messageText, setMessageText] = useState<string>('');\n\tconst [waves, setWaves] = useState<Wave[]>(initialList);\n\n\tconst handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetMessageText(e.target.value);\n\t};\t\n\t\n\tconst handleClick = () => {\n\t\tif (messageText === '') { return };\n\n\t\tconst newWave: Wave = {\n\t\t\tid: nanoid(),\n\t\t\twalletId: \"0xC5581F1aE61E34391824779D505Ca127a4566737\",\n\t\t\tmessageText, \n\t\t\ttimestamp: moment().utc().format(),\n\t\t}\n\n\t\tconst temp = waves;\n\t\ttemp.push(newWave)\n\t\ttemp.sort(function(a, b) {\n\t\t\treturn a.timestamp < b.timestamp ? 1: -1;\n\t\t});\n\n\t\tsetWaves({...temp});\n\t\tsetMessageText('');\n\t};\n\n\tconst renderHeader = () => (\n\t\t<div className={styles.headerContainer}>\n\t\t\t<div className={styles.header}>Waveportal</div>\n\t\t</div>\n\t);\n\n\tconst renderBody = () => (\n\t\t<div className={styles.bodyContainer}>\n\t\t\t<div className={styles.textContainer}>\n\t\t\t\tConnect your wallet and leave a message!\n\t\t\t</div>\n\n\t\t\t<div className={styles.textInputContainer}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={styles.textInput}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={messageText}\n\t\t\t\t\tplaceholder=\"leave a message!\"\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\thandleTextChange(e)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className={styles.buttonContainer}>\n\t\t\t\t<div className={styles.waveButton} onClick={handleClick}>\n\t\t\t\t\t<div className={styles.buttonText}>wave</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\tconst renderTransactions = () => {\n\t\tconsole.log(waves);\n\t\treturn(\n\t\t\twaves.map((w: Wave) => {\n\t\t\t\t<Transaction key={w.id} wave={w}/>\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.dataContainer}>\n\t\t\t\t{renderHeader()}\n\t\t\t\t{renderBody()}\n\t\t\t\t<div className={styles.transactionsContainer}>\n\t\t\t\t\t{renderTransactions()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}